!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
ALLOC_QUANT	.\src\last.fm.c	16;"	d	file:
BYTE_ORDER	.\src\md5.c	57;"	d	file:
BYTE_ORDER	.\src\md5.c	59;"	d	file:
BYTE_ORDER	.\src\md5.c	61;"	d	file:
E_AUTH	.\inc\last.fm.h	5;"	d
E_BAN	.\inc\last.fm.h	7;"	d
E_EPIC	.\inc\last.fm.h	11;"	d
E_FAIL	.\inc\last.fm.h	9;"	d
E_OK	.\inc\last.fm.h	4;"	d
E_OVER	.\inc\last.fm.h	10;"	d
E_SESSION	.\inc\last.fm.h	6;"	d
E_TIME	.\inc\last.fm.h	8;"	d
E_UNKN	.\inc\last.fm.h	12;"	d
F	.\src\md5.c	202;"	d	file:
FPAINEX	.\inc\u.h	39;"	d
FPAINVAL	.\inc\u.h	43;"	d
FPAOVFL	.\inc\u.h	40;"	d
FPAUNFL	.\inc\u.h	41;"	d
FPAZDIV	.\inc\u.h	42;"	d
FPINEX	.\inc\u.h	24;"	d
FPINVAL	.\inc\u.h	28;"	d
FPOVFL	.\inc\u.h	26;"	d
FPPDBL	.\inc\u.h	36;"	d
FPPEXT	.\inc\u.h	34;"	d
FPPMASK	.\inc\u.h	37;"	d
FPPSGL	.\inc\u.h	35;"	d
FPRMASK	.\inc\u.h	33;"	d
FPRNINF	.\inc\u.h	32;"	d
FPRNR	.\inc\u.h	29;"	d
FPRPINF	.\inc\u.h	31;"	d
FPRZ	.\inc\u.h	30;"	d
FPUNFL	.\inc\u.h	25;"	d
FPZDIV	.\inc\u.h	27;"	d
FPdbleword	.\inc\u.h	/^typedef union FPdbleword FPdbleword;$/;"	t	typeref:union:FPdbleword
FPdbleword	.\inc\u.h	/^union FPdbleword$/;"	u
G	.\src\md5.c	228;"	d	file:
H	.\src\md5.c	254;"	d	file:
I	.\src\md5.c	280;"	d	file:
JMPBUFDPC	.\inc\u.h	16;"	d
JMPBUFPC	.\inc\u.h	15;"	d
JMPBUFSP	.\inc\u.h	14;"	d
MAX_AUTH_TOKEN	.\src\last.fm.c	13;"	d	file:
MAX_STR	.\src\last.fm.c	14;"	d	file:
MAX_SUBMIT	.\src\last.fm.c	21;"	d	file:
MAX_TIMESTAMP_SIZE	.\src\last.fm.c	12;"	d	file:
NMEM_SIZE	.\src\last.fm.c	15;"	d	file:
REALLOC_DELTA	.\src\last.fm.c	17;"	d	file:
ROTATE_LEFT	.\src\md5.c	197;"	d	file:
Rune	.\inc\u.h	/^typedef	ushort		Rune;$/;"	t
SET	.\src\md5.c	203;"	d	file:
SET	.\src\md5.c	223;"	d	file:
SET	.\src\md5.c	229;"	d	file:
SET	.\src\md5.c	249;"	d	file:
SET	.\src\md5.c	255;"	d	file:
SET	.\src\md5.c	275;"	d	file:
SET	.\src\md5.c	281;"	d	file:
SET	.\src\md5.c	301;"	d	file:
T1	.\src\md5.c	65;"	d	file:
T10	.\src\md5.c	74;"	d	file:
T11	.\src\md5.c	75;"	d	file:
T12	.\src\md5.c	76;"	d	file:
T13	.\src\md5.c	77;"	d	file:
T14	.\src\md5.c	78;"	d	file:
T15	.\src\md5.c	79;"	d	file:
T16	.\src\md5.c	80;"	d	file:
T17	.\src\md5.c	81;"	d	file:
T18	.\src\md5.c	82;"	d	file:
T19	.\src\md5.c	83;"	d	file:
T2	.\src\md5.c	66;"	d	file:
T20	.\src\md5.c	84;"	d	file:
T21	.\src\md5.c	85;"	d	file:
T22	.\src\md5.c	86;"	d	file:
T23	.\src\md5.c	87;"	d	file:
T24	.\src\md5.c	88;"	d	file:
T25	.\src\md5.c	89;"	d	file:
T26	.\src\md5.c	90;"	d	file:
T27	.\src\md5.c	91;"	d	file:
T28	.\src\md5.c	92;"	d	file:
T29	.\src\md5.c	93;"	d	file:
T3	.\src\md5.c	67;"	d	file:
T30	.\src\md5.c	94;"	d	file:
T31	.\src\md5.c	95;"	d	file:
T32	.\src\md5.c	96;"	d	file:
T33	.\src\md5.c	97;"	d	file:
T34	.\src\md5.c	98;"	d	file:
T35	.\src\md5.c	99;"	d	file:
T36	.\src\md5.c	100;"	d	file:
T37	.\src\md5.c	101;"	d	file:
T38	.\src\md5.c	102;"	d	file:
T39	.\src\md5.c	103;"	d	file:
T4	.\src\md5.c	68;"	d	file:
T40	.\src\md5.c	104;"	d	file:
T41	.\src\md5.c	105;"	d	file:
T42	.\src\md5.c	106;"	d	file:
T43	.\src\md5.c	107;"	d	file:
T44	.\src\md5.c	108;"	d	file:
T45	.\src\md5.c	109;"	d	file:
T46	.\src\md5.c	110;"	d	file:
T47	.\src\md5.c	111;"	d	file:
T48	.\src\md5.c	112;"	d	file:
T49	.\src\md5.c	113;"	d	file:
T5	.\src\md5.c	69;"	d	file:
T50	.\src\md5.c	114;"	d	file:
T51	.\src\md5.c	115;"	d	file:
T52	.\src\md5.c	116;"	d	file:
T53	.\src\md5.c	117;"	d	file:
T54	.\src\md5.c	118;"	d	file:
T55	.\src\md5.c	119;"	d	file:
T56	.\src\md5.c	120;"	d	file:
T57	.\src\md5.c	121;"	d	file:
T58	.\src\md5.c	122;"	d	file:
T59	.\src\md5.c	123;"	d	file:
T6	.\src\md5.c	70;"	d	file:
T60	.\src\md5.c	124;"	d	file:
T61	.\src\md5.c	125;"	d	file:
T62	.\src\md5.c	126;"	d	file:
T63	.\src\md5.c	127;"	d	file:
T64	.\src\md5.c	128;"	d	file:
T7	.\src\md5.c	71;"	d	file:
T8	.\src\md5.c	72;"	d	file:
T9	.\src\md5.c	73;"	d	file:
T_MASK	.\src\md5.c	64;"	d	file:
_chk	.\src\last.fm.c	/^char * _chk(char ** s)$/;"	f
_chkint	.\src\last.fm.c	24;"	d	file:
_chkstr	.\src\last.fm.c	23;"	d	file:
_chkurl	.\src\http.c	/^struct url * _chkurl(struct url ** u)$/;"	f
_handle_handshake	.\src\last.fm.c	/^uint _handle_handshake()$/;"	f
_handle_std	.\src\last.fm.c	/^uint _handle_std() { return 1; }$/;"	f
_http_sendbuff	.\src\http.c	/^uint _http_sendbuff(u, proc, cookie, buff)$/;"	f
_itos	.\src\last.fm.c	/^char * _itos(uint a)$/;"	f
_lfm_handleresp	.\src\last.fm.c	/^uint _lfm_handleresp(uint cookie) $/;"	f
_mk_pfx	.\src\last.fm.c	/^char * _mk_pfx(char letter, int idx) $/;"	f
abcd	.\inc\md5.h	/^    md5_word_t abcd[4];		\/* digest buffer *\/$/;"	m	struct:md5_state_s
album	.\inc\last.fm.h	/^	char * album;$/;"	m	struct:lfm_songinfo
artist	.\inc\last.fm.h	/^	char * artist; \/\/ *$/;"	m	struct:lfm_songinfo
as	.\src\last.fm.c	/^struct url as = {0, 0, 0, 0};$/;"	v	typeref:struct:url
auth_token	.\src\last.fm.c	/^char * auth_token = 0;$/;"	v
buf	.\inc\md5.h	/^    md5_byte_t buf[64];		\/* accumulate block *\/$/;"	m	struct:md5_state_s
buff	.\src\http.c	/^char buff[1024];$/;"	v
cl_ver	.\inc\last.fm.h	/^	char * cl_ver;$/;"	m	struct:lfm_creds
client	.\inc\last.fm.h	/^	char * client;$/;"	m	struct:lfm_creds
cookie_proto	.\src\last.fm.c	/^typedef unsigned int (*cookie_proto) ();$/;"	t	file:
count	.\inc\md5.h	/^    md5_word_t count[2];	\/* message length in bits, lsw first *\/$/;"	m	struct:md5_state_s
creds	.\src\last.fm.c	/^struct lfm_creds * creds = 0;$/;"	v	typeref:struct:lfm_creds
fails	.\src\last.fm.c	/^uint fails = 0;$/;"	v
handle	.\inc\u.h	/^typedef void * handle;$/;"	t
handshake	.\src\last.fm.c	/^uint handshake() $/;"	f
hi	.\inc\u.h	/^		ulong hi;$/;"	m	struct:FPdbleword::__anon1
host	.\inc\http.h	/^	char * host;$/;"	m	struct:url
host	.\src\http.c	/^char * host;$/;"	v
hs_url	.\inc\last.fm.h	/^	char * hs_url;$/;"	m	struct:lfm_creds
httpclose	.\src\http.c	/^void httpclose() {$/;"	f
httpconnect	.\src\http.c	/^int httpconnect(char * server, int port)$/;"	f
httpget	.\src\http.c	/^uint __cdecl httpget(struct url * u, void * proc, uint cookie, const char * format, ...)$/;"	f
httpost	.\src\http.c	/^uint __cdecl httpost(struct url * u, void * proc, uint cookie, const char * format, ...)$/;"	f
httpreadln	.\src\http.c	/^char * httpreadln() {$/;"	f
httpskiphdr	.\src\http.c	/^void httpskiphdr() {$/;"	f
jmp_buf	.\inc\u.h	/^typedef long		jmp_buf[2];$/;"	t
laste	.\src\last.fm.c	/^uint laste = 0;$/;"	v
len	.\inc\last.fm.h	/^	unsigned int len;  \/\/ *?$/;"	m	struct:lfm_songinfo
lfm_creds	.\inc\last.fm.h	/^struct lfm_creds {$/;"	s
lfm_init	.\src\last.fm.c	/^uint lfm_init(struct lfm_creds * a) $/;"	f
lfm_now_playing	.\src\last.fm.c	/^uint lfm_now_playing(struct lfm_songinfo * s)$/;"	f
lfm_songinfo	.\inc\last.fm.h	/^struct lfm_songinfo {$/;"	s
lfm_submit	.\src\last.fm.c	/^uint lfm_submit(struct lfm_songinfo ** s)$/;"	f
lo	.\inc\u.h	/^		ulong lo;$/;"	m	struct:FPdbleword::__anon1
mb_tid	.\inc\last.fm.h	/^	char * mb_tid;$/;"	m	struct:lfm_songinfo
md5	.\src\last.fm.c	/^char * md5(char *in)$/;"	f
md5_INCLUDED	.\inc\md5.h	51;"	d
md5_append	.\src\md5.c	/^md5_append(md5_state_t *pms, const md5_byte_t *data, int nbytes)$/;"	f
md5_byte_t	.\inc\md5.h	/^typedef unsigned char md5_byte_t; \/* 8-bit byte *\/$/;"	t
md5_finish	.\src\md5.c	/^md5_finish(md5_state_t *pms, md5_byte_t digest[16])$/;"	f
md5_init	.\src\md5.c	/^md5_init(md5_state_t *pms)$/;"	f
md5_process	.\src\md5.c	/^md5_process(md5_state_t *pms, const md5_byte_t *data \/*[64]*\/)$/;"	f	file:
md5_state_s	.\inc\md5.h	/^typedef struct md5_state_s {$/;"	s
md5_state_t	.\inc\md5.h	/^} md5_state_t;$/;"	t	typeref:struct:md5_state_s
md5_word_t	.\inc\md5.h	/^typedef unsigned int md5_word_t; \/* 32-bit word *\/$/;"	t
mpdigit	.\inc\u.h	/^typedef unsigned int	mpdigit;	\/* for \/sys\/include\/mp.h *\/$/;"	t
msgproc_proto	.\inc\http.h	/^typedef unsigned int (*msgproc_proto) (unsigned int);$/;"	t
nil	.\inc\u.h	1;"	d
nmem	.\src\last.fm.c	/^char nmem[NMEM_SIZE];$/;"	v
nmp	.\src\last.fm.c	/^char * nmp = nmem;$/;"	v
np	.\src\last.fm.c	/^struct url np = {0, 0, 0, 0};$/;"	v	typeref:struct:url
num	.\inc\last.fm.h	/^	unsigned int num;$/;"	m	struct:lfm_songinfo
parse_url	.\src\http.c	/^uint parse_url(struct url * s) {$/;"	f
pass	.\inc\last.fm.h	/^	char * pass;$/;"	m	struct:lfm_creds
path	.\inc\http.h	/^	char * path;$/;"	m	struct:url
port	.\inc\http.h	/^	unsigned short port;$/;"	m	struct:url
rate	.\inc\last.fm.h	/^	char * rate;$/;"	m	struct:lfm_songinfo
sb	.\src\last.fm.c	/^struct url sb = {0, 0, 0, 0};$/;"	v	typeref:struct:url
schar	.\inc\u.h	/^typedef   signed char	schar;$/;"	t
server_ip	.\src\http.c	/^uint 	server_ip;$/;"	v
server_port	.\src\http.c	/^ushort	server_port;$/;"	v
sock	.\src\http.c	/^SOCKET sock;$/;"	v
src	.\inc\last.fm.h	/^	char * src;$/;"	m	struct:lfm_songinfo
srcstr	.\inc\http.h	/^	char * srcstr;$/;"	m	struct:url
time	.\inc\last.fm.h	/^	unsigned int time;$/;"	m	struct:lfm_songinfo
track	.\inc\last.fm.h	/^	char * track;  \/\/ *$/;"	m	struct:lfm_songinfo
u16int	.\inc\u.h	/^typedef unsigned short	u16int;$/;"	t
u32int	.\inc\u.h	/^typedef unsigned int	u32int;$/;"	t
u64int	.\inc\u.h	/^typedef unsigned long long u64int;$/;"	t
u8int	.\inc\u.h	/^typedef unsigned char	u8int;$/;"	t
uchar	.\inc\u.h	/^typedef	unsigned char	uchar;$/;"	t
uint	.\inc\u.h	/^typedef unsigned int	uint;$/;"	t
ulong	.\inc\u.h	/^typedef unsigned long	ulong;$/;"	t
url	.\inc\http.h	/^struct url {$/;"	s
user	.\inc\last.fm.h	/^	char * user;$/;"	m	struct:lfm_creds
ushort	.\inc\u.h	/^typedef	unsigned short	ushort;$/;"	t
usize	.\inc\u.h	/^typedef unsigned long	usize;$/;"	t
uvlong	.\inc\u.h	/^typedef	unsigned long long uvlong;$/;"	t
vlong	.\inc\u.h	/^typedef	long long	vlong;$/;"	t
x	.\inc\u.h	/^	double	x;$/;"	m	union:FPdbleword
zbuf	.\src\http.c	/^char zbuf[1024]; \/\/ zeroed buff$/;"	v
